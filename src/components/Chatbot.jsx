import { useState, useRef, useEffect } from "react";
import axios from "axios";

const apiKey = import.meta.env.VITE_OPENAI_API_KEY;


const faqList = [
  { question: "Quelles sont les formules disponibles ?", answer: "Nous proposons \"Chey\" (49‚Ç¨/m¬≤) et \"Ssoi\" (69‚Ç¨/m¬≤)." },
  { question: "Quels sont les d√©lais pour un projet ?", answer: "Les projets prennent entre 4 et 8 semaines, selon leur complexit√©." },
  { question: "Comment puis-je contacter l'√©quipe ?", answer: "Vous pouvez nous contacter via la page 'Contact', par e-mail √† cheyssoiparis@gmail.com ou par t√©l√©phone au +33 (0)7 81 16 56 22." },
  { question: "Puis-je voir des r√©alisations ?", answer: "Oui, consultez la section 'Galerie' pour voir nos projets." }
];

const systemPrompt = `
Tu es l'assistant du site Cheyssoi Paris. Tu connais parfaitement le site et ses services.
Tu peux r√©pondre √† toutes les questions sur :
- Les projets disponibles dans la galerie.
- Les formules propos√©es et leur prix.
- Les d√©lais et mat√©riaux utilis√©s.
- Comment contacter l'√©quipe.
- L'histoire et l'engagement du site.
- L'√©quipe de Cheyssoi Paris et ses membres.
- D√©tails des projets r√©alis√©s.
- Toute autre question en lien avec ce site.

Si une question ne concerne pas le site, dis simplement "Je ne peux r√©pondre qu'aux questions li√©es √† Cheyssoi Paris."

### Formules
Nous proposons deux formules :
- **CHEY** (49‚Ç¨/m¬≤) : CONSEILS, ETUDE PERSONNALIS√âE, ACCOMPAGNEMENT, PLANCHE D'AMBIANCES, PLANS 2D & 3D, PR√âSENTATION MAT√âRIAUX, SHOPPING LIST, COFFRET LIVR√â, LIEN AVEC ARTISANS.
- **SSOI** (69‚Ç¨/m¬≤) : Inclut CHEY + GESTION DU CHANTIER.

### Engagements de Cheyssoi Paris
CHEYSSOI PARIS est un studio de design int√©rieur √©thique et √©coresponsable, r√©inventant les espaces en alliant √©l√©gance, durabilit√© et respect de l‚Äôenvironnement.

### D√©lais et Mat√©riaux
Les projets prennent entre **4 et 8 semaines** selon leur complexit√©.
Mat√©riaux utilis√©s : **bois certifi√© FSC, peintures √©cologiques, textile naturel**.

### L'√©quipe de Cheyssoi Paris
- **Tania** : Fondatrice, Designer d'Int√©rieur.
- **Hoang** : Designer d'Int√©rieur.
- **Huabing** : Designer d'Int√©rieur.
- **Gamze** : Designer d'Int√©rieur.
- **Supriya** : Designer d'Int√©rieur.
- **Mones** : D√©veloppement Web.
- **Scharly** : D√©veloppement Web.
- **Etienne** : D√©veloppement Commercial.
- **Valentina** : D√©veloppement Commercial.

### Projets r√©alis√©s
- **Projet Haussmann** : Suite r√©sidentielle luxueuse et durable, inspir√©e par l'√©l√©gance intemporelle de la Place Vend√¥me. Design raffin√©, bois certifi√© et textiles biologiques.
- **Projet Vosges** : Salon de co-living √©l√©gant et durable, favorisant la convivialit√© et le confort avec des mat√©riaux recycl√©s et naturels.
- **Projet Montaigne** : Showroom de haute couture √©co-responsable, combinant mat√©riaux biosourc√©s et sophistication.
- **Projet Vend√¥me** : Espace de travail prestigieux dans un immeuble haussmannien, utilisant bois massif certifi√© et marbre √©cologique.

### Informations de contact
- **Page Contact** : Disponible sur le site.
- **E-mail** : cheyssoiparis@gmail.com
- **T√©l√©phone** : +33 (0)7 81 16 56 22
`;

export default function Chatbot() {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState([
    { sender: "bot", text: "Bonjour ! Comment puis-je vous aider ?" }
  ]);
  const [userInput, setUserInput] = useState("");
  const messagesEndRef = useRef(null);

  const handleFaqClick = (question, answer) => {
    const newMessages = [...messages, { sender: "user", text: question }, { sender: "bot", text: answer }];
    setMessages(newMessages);
  };

  const sendMessage = async () => {
    if (userInput.trim() === "") return;

    const newMessages = [...messages, { sender: "user", text: userInput }];
    setMessages(newMessages);
    setUserInput("");

    try {
      const response = await axios.post(
        "https://api.openai.com/v1/chat/completions",
        {
          model: "gpt-3.5-turbo",
          messages: [
            { role: "system", content: systemPrompt },
            ...newMessages.slice(-5).map(msg => ({ role: msg.sender === "user" ? "user" : "assistant", content: msg.text })),
            { role: "user", content: userInput }
          ],
          max_tokens: 200,
        },
        {
          headers: {
            "Authorization": `Bearer ${OPENAI_API_KEY}`,
            "Content-Type": "application/json"
          }
        }
      );

      const botResponse = response.data.choices[0].message.content;
      setMessages([...newMessages, { sender: "bot", text: botResponse }]);
    } catch (error) {
      console.error("Erreur OpenAI :", error);
      setMessages([...newMessages, { sender: "bot", text: "D√©sol√©, je n'ai pas compris votre demande." }]);
    }
  };

  return (
    <div className="chatbot-wrapper">
      {!isOpen && (
        <button className="chatbot-button" onClick={() => setIsOpen(true)}>üí¨</button>
      )}
      {isOpen && (
        <div className="chatbot-container">
          <div className="chatbot-header">
            Assistant Virtuel
            <button className="close-btn" onClick={() => setIsOpen(false)}>‚ùå</button>
          </div>
          <div className="chatbot-body" style={{ overflowY: "auto", maxHeight: "300px" }}>
            <div className="faq-section">
              <strong>Questions fr√©quentes :</strong>
              {faqList.map((faq, index) => (
                <button key={index} className="faq-button" onClick={() => handleFaqClick(faq.question, faq.answer)}>
                  {faq.question}
                </button>
              ))}
            </div>
            {messages.map((msg, index) => (
              <div key={index} className={msg.sender === "user" ? "user-message" : "bot-message"}>
                {msg.text}
              </div>
            ))}
          </div>
          <div className="chatbot-footer">
            <input
              type="text"
              value={userInput}
              onChange={(e) => setUserInput(e.target.value)}
              placeholder="√âcrivez un message..."
            />
            <button onClick={sendMessage}>Envoyer</button>
          </div>
        </div>
      )}
    </div>
  );
}